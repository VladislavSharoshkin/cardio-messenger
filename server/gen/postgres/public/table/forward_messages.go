//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ForwardMessages = newForwardMessagesTable("public", "forward_messages", "")

type forwardMessagesTable struct {
	postgres.Table

	//Columns
	ID               postgres.ColumnInteger
	CreatedAt        postgres.ColumnTimestampz
	UpdatedAt        postgres.ColumnTimestampz
	DeletedAt        postgres.ColumnTimestampz
	MessageID        postgres.ColumnInteger
	ForwardMessageID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ForwardMessagesTable struct {
	forwardMessagesTable

	EXCLUDED forwardMessagesTable
}

// AS creates new ForwardMessagesTable with assigned alias
func (a ForwardMessagesTable) AS(alias string) *ForwardMessagesTable {
	return newForwardMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ForwardMessagesTable with assigned schema name
func (a ForwardMessagesTable) FromSchema(schemaName string) *ForwardMessagesTable {
	return newForwardMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ForwardMessagesTable with assigned table prefix
func (a ForwardMessagesTable) WithPrefix(prefix string) *ForwardMessagesTable {
	return newForwardMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ForwardMessagesTable with assigned table suffix
func (a ForwardMessagesTable) WithSuffix(suffix string) *ForwardMessagesTable {
	return newForwardMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newForwardMessagesTable(schemaName, tableName, alias string) *ForwardMessagesTable {
	return &ForwardMessagesTable{
		forwardMessagesTable: newForwardMessagesTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newForwardMessagesTableImpl("", "excluded", ""),
	}
}

func newForwardMessagesTableImpl(schemaName, tableName, alias string) forwardMessagesTable {
	var (
		IDColumn               = postgres.IntegerColumn("id")
		CreatedAtColumn        = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn        = postgres.TimestampzColumn("updated_at")
		DeletedAtColumn        = postgres.TimestampzColumn("deleted_at")
		MessageIDColumn        = postgres.IntegerColumn("message_id")
		ForwardMessageIDColumn = postgres.IntegerColumn("forward_message_id")
		allColumns             = postgres.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, MessageIDColumn, ForwardMessageIDColumn}
		mutableColumns         = postgres.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, MessageIDColumn, ForwardMessageIDColumn}
	)

	return forwardMessagesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		CreatedAt:        CreatedAtColumn,
		UpdatedAt:        UpdatedAtColumn,
		DeletedAt:        DeletedAtColumn,
		MessageID:        MessageIDColumn,
		ForwardMessageID: ForwardMessageIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
